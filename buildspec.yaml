version: 0.2

env:
  variables:
    AWS_REGION: "ap-south-1"
    REPOSITORY_NAME: "sample-java-app"
    ECR_URI: "699475953949.dkr.ecr.ap-south-1.amazonaws.com/sample-java-app"

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo "🔍 Installing prerequisites..."
      - mkdir -p ~/.m2
      - echo "📦 Fetching CodeArtifact details..."
      - export DOMAIN_NAME=$(aws codeartifact list-domains --region $AWS_REGION --query 'domains[0].name' --output text)
      - export DOMAIN_OWNER=$(aws sts get-caller-identity --query 'Account' --output text)
      - export CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain "$DOMAIN_NAME" --domain-owner "$DOMAIN_OWNER" --region "$AWS_REGION" --query authorizationToken --output text)
      - export MAVEN_REPO_URL=$(aws codeartifact get-repository-endpoint --domain "$DOMAIN_NAME" --domain-owner "$DOMAIN_OWNER" --repository "$REPOSITORY_NAME" --format maven --region "$AWS_REGION" --query repositoryEndpoint --output text)
      - echo "✅ Maven Repo URL = $MAVEN_REPO_URL"
      - |
        cat > ~/.m2/settings.xml <<EOL
        <settings>
          <servers>
            <server>
              <id>codeartifact</id>
              <username>aws</username>
              <password>${CODEARTIFACT_AUTH_TOKEN}</password>
            </server>
          </servers>
          <profiles>
            <profile>
              <id>codeartifact-repo</id>
              <repositories>
                <repository>
                  <id>codeartifact</id>
                  <url>${MAVEN_REPO_URL}</url>
                </repository>
              </repositories>
              <pluginRepositories>
                <pluginRepository>
                  <id>codeartifact</id>
                  <url>${MAVEN_REPO_URL}</url>
                </pluginRepository>
              </pluginRepositories>
            </profile>
          </profiles>
          <activeProfiles>
            <activeProfile>codeartifact-repo</activeProfile>
          </activeProfiles>
        </settings>
        EOL

  pre_build:
    commands:
      - IMAGE_TAG=build-$CODEBUILD_BUILD_NUMBER-$(date +%Y%m%d)
      - echo "Docker image tag:$IMAGE_TAG"
      - echo "🏗️ Building JAR using CodeArtifact dependencies..."
      - mvn clean package -DskipTests -s ~/.m2/settings.xml
      - echo "🔐 Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_URI

  build:
    commands:
      - echo "📤 Deploying JAR to CodeArtifact..."
      - mvn deploy -s ~/.m2/settings.xml
      - echo "🐳 Building Docker image..."
      - docker build -t $ECR_URI:$IMAGE_TAG .

  post_build:
    commands:
      - echo "📤 Pushing Docker image..."
      - docker push $ECR_URI:$IMAGE_TAG
      - echo "📝 Writing image tag for deploy stage..."
      - echo "$ECR_URI:$IMAGE_TAG" > imageTag.txt

artifacts:
  files:
    - imageTag.txt
    - k8s/**/*   # export k8s manifests so deploy stage can use them
    - buildspec-deploy.yaml

